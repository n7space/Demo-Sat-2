<?xml version="1.0" encoding="utf-8"?>
<PackageFile xmlns="http://www.ccsds.org/schema/sois/seds" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.ccsds.org/schema/sois/seds seds.xsd">
  <Package name="com/n7space/AfecHwas">
    <DataTypeSet>
      <IntegerDataType name="DestinationAddress">
        <LongDescription>Type for a memory destination address.</LongDescription>
        <IntegerDataEncoding encoding="unsigned" sizeInBits="32" byteOrder="littleEndian" />
        <Range>
          <MinMaxRange rangeType="inclusiveMinInclusiveMax" min="0" max="4294967295" />
        </Range>
      </IntegerDataType>
      <IntegerDataType name="SourceAddress">
        <LongDescription>Type for a memory source address.</LongDescription>
        <IntegerDataEncoding encoding="unsigned" sizeInBits="32" byteOrder="littleEndian" />
        <Range>
          <MinMaxRange rangeType="inclusiveMinInclusiveMax" min="0" max="4294967295" />
        </Range>
      </IntegerDataType>
      <IntegerDataType name="Word">
        <LongDescription>Machine word.</LongDescription>
        <IntegerDataEncoding encoding="unsigned" byteOrder="littleEndian" sizeInBits="32" />
        <Range>
          <MinMaxRange rangeType="inclusiveMinInclusiveMax" min="0" max="4294967295" />
        </Range>
      </IntegerDataType>
      <IntegerDataType name="WordMask">
        <LongDescription>WordMask for a machine word.</LongDescription>
        <IntegerDataEncoding byteOrder="littleEndian" sizeInBits="32" encoding="unsigned" />
        <Range>
          <MinMaxRange min="0" max="4294967295" rangeType="inclusiveMinInclusiveMax" />
        </Range>
      </IntegerDataType>
      <EnumeratedDataType name="AfecHwas_Instance">
        <LongDescription>Definitions of PIO ports</LongDescription>
        <IntegerDataEncoding encoding="unsigned" byteOrder="littleEndian" sizeInBits="32" />
        <EnumerationList>
          <Enumeration label="AfecHwas_Instance_Afec0" value="0"></Enumeration>
          <Enumeration label="AfecHwas_Instance_Afec1" value="1" />
        </EnumerationList>
      </EnumeratedDataType>
      <IntegerDataType name="AfecHwas_StartupTime">
        <LongDescription>Value expressing possible Startup Times (0-15) refer to documentation</LongDescription>
        <IntegerDataEncoding encoding="unsigned" byteOrder="littleEndian" sizeInBits="8" />
        <Range>
          <MinMaxRange max="15" min="0" rangeType="inclusiveMinInclusiveMax" />
        </Range>
      </IntegerDataType>
      <IntegerDataType name="AfecHwasChannel">
        <LongDescription>Number of AFEC channel (0-11, each AFEC instance has 12 channels)</LongDescription>
        <IntegerDataEncoding encoding="unsigned" byteOrder="littleEndian" sizeInBits="8" />
        <Range>
          <MinMaxRange max="11" min="0" rangeType="inclusiveMinInclusiveMax" />
        </Range>
      </IntegerDataType>
      <ContainerDataType name="AfecHwas" shortDescription="Afec descriptor">
        <EntryList>
          <Entry name="mInstanceAddress" type="DestinationAddress"></Entry>
          <Entry name="mInstanceMrAddress" type="DestinationAddress" />
          <Entry name="mInstanceEmrAddress" type="DestinationAddress"></Entry>
          <Entry name="mInstanceChdrAddress" type="DestinationAddress"></Entry>
          <Entry name="mInstanceCherAddress" type="DestinationAddress"></Entry>
          <Entry name="mInstanceChsrAddress" type="DestinationAddress"></Entry>
          <Entry name="mInstanceCrAddress" type="DestinationAddress"></Entry>
          <Entry name="mInstanceIsrAddress" type="DestinationAddress"></Entry>
          <Entry name="mInstanceLcdrAddress" type="DestinationAddress"></Entry>
        </EntryList>
      </ContainerDataType>
      <ContainerDataType name="AfecHwasConfig" shortDescription="Afec instance configuration container">
        <EntryList>
          <Entry name="mAfecInstance" type="AfecHwas_Instance" />
          <Entry name="mStartupTime" type="AfecHwas_StartupTime" />
          <Entry name="mPrescalerValue" type="Word" />
        </EntryList>
      </ContainerDataType>
      <ContainerDataType name="PmcHwas" shortDescription="Pmc descriptor">
        <EntryList>
          <Entry name="PMC_PCER0_OFFSET" type="DestinationAddress" />
          <Entry name="PMC_PCER1_OFFSET" type="DestinationAddress" />
          <Entry name="PMC_PCxR0_PID29_AFEC0_MASK" type="WordMask" />
          <Entry name="PMC_PCxR1_PID40_AFEC1_MASK" type="WordMask" />
        </EntryList>
      </ContainerDataType>
    </DataTypeSet>
    <DeclaredInterfaceSet>
      <Interface level="subnetwork" name="RawMemoryAccessInterfaceType">
        <LongDescription>Interface for accessing RAW memory.</LongDescription>
        <CommandSet>
          <Command name="ReadWord" mode="sync">
            <LongDescription>Read word from memory, masked by the mask. The address must be word-aligned.</LongDescription>
            <Argument name="address" type="SourceAddress" mode="in" />
            <Argument name="mask" type="WordMask" mode="in" />
            <Argument name="outputValue" type="Word" mode="out" />
          </Command>
          <Command name="WriteWord" mode="sync">
            <LongDescription>Write word to memory, masked by the mask.  The address must be word-aligned.</LongDescription>
            <Argument name="address" type="DestinationAddress" mode="in" />
            <Argument name="mask" type="WordMask" mode="in" />
            <Argument name="inputValue" type="Word" mode="in" />
          </Command>
        </CommandSet>
      </Interface>
      <Interface level="functional" name="AfecHwasInterfaceType">
        <CommandSet>
          <Command name="InitInstance" mode="sync">
            <LongDescription>Initializes Afec Instance</LongDescription>
            <Argument name="afec" type="AfecHwas" mode="out" />
            <Argument name="config" type="AfecHwasConfig" mode="in" />
          </Command>
          <Command name="GetValue" mode="sync">
            <LongDescription>Gets analog value of the given channel</LongDescription>
            <Argument name="afec" type="AfecHwas" mode="in" />
            <Argument name="analogChannel" type="AfecHwasChannel" mode="in" />
            <Argument name="channelOutput" type="Word" mode="out" />
          </Command>
        </CommandSet>
      </Interface>
    </DeclaredInterfaceSet>
    <ComponentSet>
      <Component name="AfecHwasDriver">
        <LongDescription>SEDS AfecHwas driver implementation</LongDescription>
        <ProvidedInterfaceSet>
          <Interface name="AfecHwasInterface" type="AfecHwasInterfaceType"></Interface>
        </ProvidedInterfaceSet>
        <RequiredInterfaceSet>
          <Interface name="RawMemoryAccess" type="RawMemoryAccessInterfaceType" />
        </RequiredInterfaceSet>
        <Implementation>
          <VariableSet>
            <Variable name="afecVar" type="AfecHwas"></Variable>
            <Variable name="configVar" type="AfecHwasConfig" />
            <Variable name="pmcVar" type="PmcHwas" />
            <Variable name="channelVar" type="AfecHwasChannel" />
            <Variable name="bitsToSetVar" type="Word" />
            <Variable name="readBitsVar" type="Word" />
            <Variable name="channelMaskVar" type="WordMask" />
            <Variable name="destinationAddressVar" type="DestinationAddress" />
            <Variable name="sourceAddressVar" type="SourceAddress"></Variable>
            <Variable name="pinMaskVar" type="WordMask" />
          </VariableSet>
          <ActivitySet>
            <Activity name="InitPmc">
              <Body>
                <Assignment outputVariableRef="pmcVar.PMC_PCER0_OFFSET">
                  <LongDescription>Assign address of PCER0 register</LongDescription>
                  <Value value="1074660880" />
                </Assignment>
                <Assignment outputVariableRef="pmcVar.PMC_PCER1_OFFSET">
                  <LongDescription>Assign address of PCER1 register</LongDescription>
                  <Value value="1074661120" />
                </Assignment>
                <Assignment outputVariableRef="pmcVar.PMC_PCxR0_PID29_AFEC0_MASK">
                  <LongDescription>Assign mask of AFEC0</LongDescription>
                  <Value value="536870912" />
                </Assignment>
                <Assignment outputVariableRef="pmcVar.PMC_PCxR1_PID40_AFEC1_MASK">
                  <LongDescription>Assign mask of AFEC1</LongDescription>
                  <Value value="256" />
                </Assignment>
              </Body>
            </Activity>
            <Activity name="InitAfecContainer">
              <Body>
                <Assignment outputVariableRef="afecVar.mInstanceMrAddress">
                  <Value value="4" />
                </Assignment>
                <MathOperation outputVariableRef="afecVar.mInstanceMrAddress">
                  <Operator operator="add" />
                  <VariableRef variableRef="afecVar.mInstanceAddress"></VariableRef>
                  <VariableRef variableRef="afecVar.mInstanceMrAddress"></VariableRef>
                </MathOperation>
                <Assignment outputVariableRef="afecVar.mInstanceEmrAddress">
                  <Value value="8" />
                </Assignment>
                <MathOperation outputVariableRef="afecVar.mInstanceEmrAddress">
                  <Operator operator="add" />
                  <VariableRef variableRef="afecVar.mInstanceAddress"></VariableRef>
                  <VariableRef variableRef="afecVar.mInstanceEmrAddress" />
                </MathOperation>
                <Assignment outputVariableRef="afecVar.mInstanceCherAddress">
                  <Value value="20" />
                </Assignment>
                <MathOperation outputVariableRef="afecVar.mInstanceCherAddress">
                  <Operator operator="add" />
                  <VariableRef variableRef="afecVar.mInstanceAddress"></VariableRef>
                  <VariableRef variableRef="afecVar.mInstanceCherAddress" />
                </MathOperation>
                <Assignment outputVariableRef="afecVar.mInstanceChdrAddress">
                  <Value value="24" />
                </Assignment>
                <MathOperation outputVariableRef="afecVar.mInstanceChdrAddress">
                  <Operator operator="add" />
                  <VariableRef variableRef="afecVar.mInstanceAddress"></VariableRef>
                  <VariableRef variableRef="afecVar.mInstanceChdrAddress" />
                </MathOperation>
                <Assignment outputVariableRef="afecVar.mInstanceChsrAddress">
                  <Value value="28" />
                </Assignment>
                <MathOperation outputVariableRef="afecVar.mInstanceChsrAddress">
                  <Operator operator="add" />
                  <VariableRef variableRef="afecVar.mInstanceAddress"></VariableRef>
                  <VariableRef variableRef="afecVar.mInstanceChsrAddress" />
                </MathOperation>
                <Assignment outputVariableRef="afecVar.mInstanceCrAddress">
                  <Value value="0" />
                </Assignment>
                <MathOperation outputVariableRef="afecVar.mInstanceCrAddress">
                  <Operator operator="add" />
                  <VariableRef variableRef="afecVar.mInstanceAddress"></VariableRef>
                  <VariableRef variableRef="afecVar.mInstanceCrAddress" />
                </MathOperation>
                <Assignment outputVariableRef="afecVar.mInstanceIsrAddress">
                  <Value value="48" />
                </Assignment>
                <MathOperation outputVariableRef="afecVar.mInstanceIsrAddress">
                  <Operator operator="add" />
                  <VariableRef variableRef="afecVar.mInstanceAddress"></VariableRef>
                  <VariableRef variableRef="afecVar.mInstanceIsrAddress" />
                </MathOperation>
                <Assignment outputVariableRef="afecVar.mInstanceLcdrAddress">
                  <Value value="32" />
                </Assignment>
                <MathOperation outputVariableRef="afecVar.mInstanceLcdrAddress">
                  <Operator operator="add" />
                  <VariableRef variableRef="afecVar.mInstanceAddress"></VariableRef>
                  <VariableRef variableRef="afecVar.mInstanceLcdrAddress" />
                </MathOperation>
              </Body>
            </Activity>
            <Activity name="InitSync">
              <Argument name="config" type="AfecHwasConfig"></Argument>
              <Body>
                <Call activity="InitPmc">
                  <LongDescription>Init PMC with definitions </LongDescription>
                </Call>
                <Conditional shortDescription="Set afec instance register address">
                  <LongDescription>Is instance equal to 0?</LongDescription>
                  <Condition>
                    <Condition>
                      <FirstOperand variableRef="config.mAfecInstance" />
                      <ComparisonOperator>equals</ComparisonOperator>
                      <Value value="AfecHwas_Instance_Afec0" />
                    </Condition>
                  </Condition>
                  <OnConditionTrue>
                    <Assignment outputVariableRef="afecVar.mInstanceAddress">
                      <Value value="1073987584"></Value>
                    </Assignment>
                  </OnConditionTrue>
                  <OnConditionFalse>
                    <Conditional>
                      <LongDescription>Is instance equal to 1?</LongDescription>
                      <Condition>
                        <Condition>
                          <FirstOperand variableRef="config.mAfecInstance" />
                          <ComparisonOperator>equals</ComparisonOperator>
                          <Value value="AfecHwas_Instance_Afec1" />
                        </Condition>
                      </Condition>
                      <OnConditionTrue>
                        <Assignment outputVariableRef="afecVar.mInstanceAddress">
                          <Value value="1074151424" />
                        </Assignment>
                      </OnConditionTrue>
                    </Conditional>
                  </OnConditionFalse>
                </Conditional>
                <Call activity="InitAfecContainer">
                  <LongDescription>Set the rest of the afec register addresses</LongDescription>
                </Call>
                <Conditional shortDescription="Init Pmc">
                  <LongDescription>Is instance equal to 0?</LongDescription>
                  <Condition>
                    <Condition>
                      <FirstOperand variableRef="config.mAfecInstance" />
                      <ComparisonOperator>equals</ComparisonOperator>
                      <Value value="AfecHwas_Instance_Afec0" />
                    </Condition>
                  </Condition>
                  <OnConditionTrue>
                    <Assignment outputVariableRef="destinationAddressVar">
                      <LongDescription>Assign destination register address</LongDescription>
                      <VariableRef variableRef="pmcVar.PMC_PCER0_OFFSET"></VariableRef>
                    </Assignment>
                    <Assignment outputVariableRef="pinMaskVar">
                      <LongDescription>Assign mask to variable</LongDescription>
                      <VariableRef variableRef="pmcVar.PMC_PCxR0_PID29_AFEC0_MASK" />
                    </Assignment>
                    <Assignment outputVariableRef="bitsToSetVar">
                      <LongDescription>Assign value to set to variable</LongDescription>
                      <VariableRef variableRef="pmcVar.PMC_PCxR0_PID29_AFEC0_MASK"></VariableRef>
                    </Assignment>
                  </OnConditionTrue>
                  <OnConditionFalse>
                    <Conditional>
                      <LongDescription>Is instance equal to 1?</LongDescription>
                      <Condition>
                        <Condition>
                          <FirstOperand variableRef="config.mAfecInstance" />
                          <ComparisonOperator>equals</ComparisonOperator>
                          <Value value="AfecHwas_Instance_Afec1" />
                        </Condition>
                      </Condition>
                      <OnConditionTrue>
                        <Assignment outputVariableRef="destinationAddressVar">
                          <LongDescription>Assign destination register address</LongDescription>
                          <VariableRef variableRef="pmcVar.PMC_PCER1_OFFSET"></VariableRef>
                        </Assignment>
                        <Assignment outputVariableRef="pinMaskVar">
                          <LongDescription>Assign mask to variable</LongDescription>
                          <VariableRef variableRef="pmcVar.PMC_PCxR1_PID40_AFEC1_MASK" />
                        </Assignment>
                        <Assignment outputVariableRef="bitsToSetVar">
                          <LongDescription>Assign value to set to variable</LongDescription>
                          <VariableRef variableRef="pmcVar.PMC_PCxR1_PID40_AFEC1_MASK"></VariableRef>
                        </Assignment>
                      </OnConditionTrue>
                    </Conditional>
                  </OnConditionFalse>
                </Conditional>
                <SendCommandPrimitive shortDescription="Enable proper AFEC instance clock" interface="RawMemoryAccess" command="WriteWord">
                  <ArgumentValue name="address">
                    <VariableRef variableRef="destinationAddressVar" />
                  </ArgumentValue>
                  <ArgumentValue name="mask">
                    <VariableRef variableRef="pinMaskVar" />
                  </ArgumentValue>
                  <ArgumentValue name="inputValue">
                    <VariableRef variableRef="bitsToSetVar" />
                  </ArgumentValue>
                </SendCommandPrimitive>
                <MathOperation outputVariableRef="bitsToSetVar" shortDescription="Calculate bits to set in AFEC MR register">
                  <Operator operator="add" />
                  <Operator operator="add" />
                  <Value value="8388608" />
                  <Operator operator="multiply" />
                  <VariableRef variableRef="config.mStartupTime" />
                  <Value value="65536" />
                  <Operator operator="multiply" />
                  <VariableRef variableRef="config.mPrescalerValue" />
                  <Value value="256" />
                </MathOperation>
                <Assignment outputVariableRef="destinationAddressVar">
                  <LongDescription>Assign destination register address</LongDescription>
                  <VariableRef variableRef="afecVar.mInstanceMrAddress"></VariableRef>
                </Assignment>
                <SendCommandPrimitive shortDescription="Set mode register (startup time and prescaler value)" interface="RawMemoryAccess" command="WriteWord">
                  <ArgumentValue name="address">
                    <VariableRef variableRef="destinationAddressVar" />
                  </ArgumentValue>
                  <ArgumentValue name="mask">
                    <VariableRef variableRef="bitsToSetVar" />
                  </ArgumentValue>
                  <ArgumentValue name="inputValue">
                    <VariableRef variableRef="bitsToSetVar" />
                  </ArgumentValue>
                </SendCommandPrimitive>
                <Assignment outputVariableRef="destinationAddressVar">
                  <LongDescription>Assign destination register address</LongDescription>
                  <VariableRef variableRef="afecVar.mInstanceEmrAddress"></VariableRef>
                </Assignment>
                <SendCommandPrimitive shortDescription="Set extended mode register (tag mode). Set tag mask value (0x0100 0000)" interface="RawMemoryAccess" command="WriteWord">
                  <ArgumentValue name="address">
                    <VariableRef variableRef="destinationAddressVar" />
                  </ArgumentValue>
                  <ArgumentValue name="mask">
                    <Value value="16777216" />
                  </ArgumentValue>
                  <ArgumentValue name="inputValue">
                    <Value value="16777216" />
                  </ArgumentValue>
                </SendCommandPrimitive>
                <SendCommandPrimitive interface="AfecHwasInterface" command="InitInstance">
                  <ArgumentValue name="afec">
                    <VariableRef variableRef="afecVar" />
                  </ArgumentValue>
                </SendCommandPrimitive>
              </Body>
            </Activity>
            <Activity name="GetValue">
              <Argument name="afec" type="AfecHwas" />
              <Argument name="analogChannel" type="AfecHwasChannel" />
              <Body>
                <MathOperation shortDescription="Calculate analogChannel mask" outputVariableRef="channelMaskVar">
                  <Operator operator="pow" />
                  <Value value="2" />
                  <VariableRef variableRef="analogChannel" />
                </MathOperation>
                <Assignment outputVariableRef="destinationAddressVar">
                  <LongDescription>Assign destination register address</LongDescription>
                  <VariableRef variableRef="afecVar.mInstanceCherAddress"></VariableRef>
                </Assignment>
                <SendCommandPrimitive shortDescription="Enable chosen analogChannel" interface="RawMemoryAccess" command="WriteWord">
                  <ArgumentValue name="address">
                    <VariableRef variableRef="destinationAddressVar" />
                  </ArgumentValue>
                  <ArgumentValue name="mask">
                    <VariableRef variableRef="channelMaskVar" />
                  </ArgumentValue>
                  <ArgumentValue name="inputValue">
                    <VariableRef variableRef="channelMaskVar" />
                  </ArgumentValue>
                </SendCommandPrimitive>
                <MathOperation shortDescription="Negate analogChannel mask" outputVariableRef="bitsToSetVar">
                  <Operator operator="subtract" />
                  <Value value="4294967295" />
                  <VariableRef variableRef="channelMaskVar" />
                </MathOperation>
                <Assignment outputVariableRef="destinationAddressVar">
                  <LongDescription>Assign destination register address</LongDescription>
                  <VariableRef variableRef="afecVar.mInstanceChdrAddress"></VariableRef>
                </Assignment>
                <SendCommandPrimitive shortDescription="Disable the rest of the channels" interface="RawMemoryAccess" command="WriteWord">
                  <ArgumentValue name="address">
                    <VariableRef variableRef="destinationAddressVar" />
                  </ArgumentValue>
                  <ArgumentValue name="mask">
                    <Value value="4095" />
                  </ArgumentValue>
                  <ArgumentValue name="inputValue">
                    <VariableRef variableRef="bitsToSetVar" />
                  </ArgumentValue>
                </SendCommandPrimitive>
                <Assignment outputVariableRef="sourceAddressVar">
                  <LongDescription>Assign destination register address</LongDescription>
                  <VariableRef variableRef="afecVar.mInstanceChsrAddress"></VariableRef>
                </Assignment>
                <Iteration iteratorVariableRef="readBitsVar">
                  <LongDescription>(TODO: change this using onTimer or async read) Wait for analogChannel to be enabled</LongDescription>
                  <StartAt>
                    <Value value="0"></Value>
                  </StartAt>
                  <EndAt>
                    <VariableRef variableRef="channelMaskVar" />
                  </EndAt>
                  <Do>
                    <SendCommandPrimitive shortDescription="Get analogChannel status register value" interface="RawMemoryAccess" command="ReadWord">
                      <ArgumentValue name="address">
                        <VariableRef variableRef="sourceAddressVar" />
                      </ArgumentValue>
                      <ArgumentValue name="mask">
                        <VariableRef variableRef="channelMaskVar" />
                      </ArgumentValue>
                      <ArgumentValue name="outputValue">
                        <VariableRef variableRef="readBitsVar" />
                      </ArgumentValue>
                    </SendCommandPrimitive>
                  </Do>
                </Iteration>
                <Assignment outputVariableRef="destinationAddressVar">
                  <LongDescription>Assign destination register address</LongDescription>
                  <VariableRef variableRef="afecVar.mInstanceCrAddress"></VariableRef>
                </Assignment>
                <SendCommandPrimitive shortDescription="Start The conversion" interface="RawMemoryAccess" command="WriteWord">
                  <ArgumentValue name="address">
                    <VariableRef variableRef="destinationAddressVar" />
                  </ArgumentValue>
                  <ArgumentValue name="mask">
                    <Value value="2" />
                  </ArgumentValue>
                  <ArgumentValue name="inputValue">
                    <Value value="2" />
                  </ArgumentValue>
                </SendCommandPrimitive>
                <Assignment outputVariableRef="sourceAddressVar">
                  <LongDescription>Assign destination register address</LongDescription>
                  <VariableRef variableRef="afecVar.mInstanceIsrAddress"></VariableRef>
                </Assignment>
                <Iteration iteratorVariableRef="readBitsVar">
                  <LongDescription>(TODO: change this using onTimer or async read) Wait for interrupt to occure</LongDescription>
                  <StartAt>
                    <Value value="0"></Value>
                  </StartAt>
                  <EndAt>
                    <Value value="16777216" />
                  </EndAt>
                  <Do>
                    <SendCommandPrimitive shortDescription="Get interrupt status register value" interface="RawMemoryAccess" command="ReadWord">
                      <ArgumentValue name="address">
                        <VariableRef variableRef="sourceAddressVar" />
                      </ArgumentValue>
                      <ArgumentValue name="mask">
                        <Value value="16777216" />
                      </ArgumentValue>
                      <ArgumentValue name="outputValue">
                        <VariableRef variableRef="readBitsVar" />
                      </ArgumentValue>
                    </SendCommandPrimitive>
                  </Do>
                </Iteration>
                <Assignment outputVariableRef="sourceAddressVar">
                  <LongDescription>Assign source register address</LongDescription>
                  <VariableRef variableRef="afecVar.mInstanceLcdrAddress"></VariableRef>
                </Assignment>
                <SendCommandPrimitive shortDescription="Read the result" interface="RawMemoryAccess" command="ReadWord">
                  <ArgumentValue name="address">
                    <VariableRef variableRef="sourceAddressVar" />
                  </ArgumentValue>
                  <ArgumentValue name="mask">
                    <Value value="65535" />
                  </ArgumentValue>
                  <ArgumentValue name="outputValue">
                    <VariableRef variableRef="readBitsVar" />
                  </ArgumentValue>
                </SendCommandPrimitive>
                <Assignment outputVariableRef="destinationAddressVar">
                  <LongDescription>Assign source register address</LongDescription>
                  <VariableRef variableRef="afecVar.mInstanceChdrAddress"></VariableRef>
                </Assignment>
                <SendCommandPrimitive shortDescription="Disable all of the channels" interface="RawMemoryAccess" command="WriteWord">
                  <ArgumentValue name="address">
                    <VariableRef variableRef="destinationAddressVar" />
                  </ArgumentValue>
                  <ArgumentValue name="mask">
                    <Value value="4095" />
                  </ArgumentValue>
                  <ArgumentValue name="inputValue">
                    <Value value="4095" />
                  </ArgumentValue>
                </SendCommandPrimitive>
                <SendCommandPrimitive shortDescription="Return the output" interface="AfecHwasInterface" command="GetValue">
                  <ArgumentValue name="channelOutput">
                    <VariableRef variableRef="readBitsVar" />
                  </ArgumentValue>
                </SendCommandPrimitive>
              </Body>
            </Activity>
          </ActivitySet>
          <StateMachineSet>
            <StateMachine name="AfecHwasDriver">
              <EntryState name="Off" />
              <State name="Idle" />
              <Transition fromState="Off" toState="Idle" name="Init">
                <OnCommandPrimitive command="InitInstance" interface="AfecHwasInterface">
                  <ArgumentValue name="config" outputVariableRef="configVar"></ArgumentValue>
                </OnCommandPrimitive>
                <Do activity="InitSync">
                  <ArgumentValue name="config">
                    <VariableRef variableRef="configVar" />
                  </ArgumentValue>
                </Do>
              </Transition>
              <Transition fromState="Idle" toState="Idle" name="Get">
                <OnCommandPrimitive command="GetValue" interface="AfecHwasInterface">
                  <ArgumentValue name="afec" outputVariableRef="afecVar" />
                  <ArgumentValue name="analogChannel" outputVariableRef="channelVar" />
                </OnCommandPrimitive>
                <Do activity="GetValue">
                  <ArgumentValue name="afec">
                    <VariableRef variableRef="afecVar" />
                  </ArgumentValue>
                  <ArgumentValue name="analogChannel">
                    <VariableRef variableRef="channelVar" />
                  </ArgumentValue>
                </Do>
              </Transition>
            </StateMachine>
          </StateMachineSet>
        </Implementation>
      </Component>
    </ComponentSet>
  </Package>
</PackageFile>