pragma Style_Checks (Off);
--  Code automatically generated by asn1scc tool
with adaasn1rtl;


pragma Warnings (Off, "unit ""System"" is not referenced");
with System;
pragma Warnings (On, "unit ""System"" is not referenced");

pragma Warnings (Off, "use clause for package ""adaasn1rtl"" has no effect");
use adaasn1rtl;
pragma Warnings (On, "use clause for package ""adaasn1rtl"" has no effect");

pragma Warnings (Off, "use clause for type");
pragma Warnings (Off, "is already use-visible through package use clause at line");
use type adaasn1rtl.OctetBuffer;
use type adaasn1rtl.BitArray;
use type adaasn1rtl.Asn1UInt;
use type adaasn1rtl.Asn1Int;
use type adaasn1rtl.BIT;
pragma Warnings (On, "use clause for type");
pragma Warnings (On, "is already use-visible through package use clause at line");



package COM_N7SPACE_AFECHWAS with SPARK_Mode
is


subtype asn1SccDestinationAddress is adaasn1rtl.Asn1UInt range 0 .. 4294967295;


function asn1SccDestinationAddress_Equal(val1, val2 : asn1SccDestinationAddress) return Boolean;

function asn1SccDestinationAddress_Init return asn1SccDestinationAddress;

ERR_DESTINATIONADDRESS:constant Integer := 1; 
function asn1SccDestinationAddress_IsConstraintValid(val : asn1SccDestinationAddress) return adaasn1rtl.ASN1_RESULT;
-- asn1SccAfecHwas --------------------------------------------
subtype asn1SccAfecHwas_mInstanceAddress is asn1SccDestinationAddress range 0 .. 4294967295;

subtype asn1SccAfecHwas_mInstanceMrAddress is asn1SccDestinationAddress range 0 .. 4294967295;

subtype asn1SccAfecHwas_mInstanceEmrAddress is asn1SccDestinationAddress range 0 .. 4294967295;

subtype asn1SccAfecHwas_mInstanceChdrAddress is asn1SccDestinationAddress range 0 .. 4294967295;

subtype asn1SccAfecHwas_mInstanceCherAddress is asn1SccDestinationAddress range 0 .. 4294967295;

subtype asn1SccAfecHwas_mInstanceChsrAddress is asn1SccDestinationAddress range 0 .. 4294967295;

subtype asn1SccAfecHwas_mInstanceCrAddress is asn1SccDestinationAddress range 0 .. 4294967295;

subtype asn1SccAfecHwas_mInstanceIsrAddress is asn1SccDestinationAddress range 0 .. 4294967295;

subtype asn1SccAfecHwas_mInstanceLcdrAddress is asn1SccDestinationAddress range 0 .. 4294967295;


type asn1SccAfecHwas is record 
    mInstanceAddress : asn1SccAfecHwas_mInstanceAddress;
    mInstanceMrAddress : asn1SccAfecHwas_mInstanceMrAddress;
    mInstanceEmrAddress : asn1SccAfecHwas_mInstanceEmrAddress;
    mInstanceChdrAddress : asn1SccAfecHwas_mInstanceChdrAddress;
    mInstanceCherAddress : asn1SccAfecHwas_mInstanceCherAddress;
    mInstanceChsrAddress : asn1SccAfecHwas_mInstanceChsrAddress;
    mInstanceCrAddress : asn1SccAfecHwas_mInstanceCrAddress;
    mInstanceIsrAddress : asn1SccAfecHwas_mInstanceIsrAddress;
    mInstanceLcdrAddress : asn1SccAfecHwas_mInstanceLcdrAddress;
end record;


function asn1SccAfecHwas_mInstanceAddress_Equal(val1, val2 : asn1SccAfecHwas_mInstanceAddress) return Boolean;

function asn1SccAfecHwas_mInstanceMrAddress_Equal(val1, val2 : asn1SccAfecHwas_mInstanceMrAddress) return Boolean;

function asn1SccAfecHwas_mInstanceEmrAddress_Equal(val1, val2 : asn1SccAfecHwas_mInstanceEmrAddress) return Boolean;

function asn1SccAfecHwas_mInstanceChdrAddress_Equal(val1, val2 : asn1SccAfecHwas_mInstanceChdrAddress) return Boolean;

function asn1SccAfecHwas_mInstanceCherAddress_Equal(val1, val2 : asn1SccAfecHwas_mInstanceCherAddress) return Boolean;

function asn1SccAfecHwas_mInstanceChsrAddress_Equal(val1, val2 : asn1SccAfecHwas_mInstanceChsrAddress) return Boolean;

function asn1SccAfecHwas_mInstanceCrAddress_Equal(val1, val2 : asn1SccAfecHwas_mInstanceCrAddress) return Boolean;

function asn1SccAfecHwas_mInstanceIsrAddress_Equal(val1, val2 : asn1SccAfecHwas_mInstanceIsrAddress) return Boolean;

function asn1SccAfecHwas_mInstanceLcdrAddress_Equal(val1, val2 : asn1SccAfecHwas_mInstanceLcdrAddress) return Boolean;

function asn1SccAfecHwas_Equal(val1, val2 : asn1SccAfecHwas) return Boolean;

function asn1SccAfecHwas_mInstanceAddress_Init return asn1SccAfecHwas_mInstanceAddress;
function asn1SccAfecHwas_mInstanceMrAddress_Init return asn1SccAfecHwas_mInstanceMrAddress;
function asn1SccAfecHwas_mInstanceEmrAddress_Init return asn1SccAfecHwas_mInstanceEmrAddress;
function asn1SccAfecHwas_mInstanceChdrAddress_Init return asn1SccAfecHwas_mInstanceChdrAddress;
function asn1SccAfecHwas_mInstanceCherAddress_Init return asn1SccAfecHwas_mInstanceCherAddress;
function asn1SccAfecHwas_mInstanceChsrAddress_Init return asn1SccAfecHwas_mInstanceChsrAddress;
function asn1SccAfecHwas_mInstanceCrAddress_Init return asn1SccAfecHwas_mInstanceCrAddress;
function asn1SccAfecHwas_mInstanceIsrAddress_Init return asn1SccAfecHwas_mInstanceIsrAddress;
function asn1SccAfecHwas_mInstanceLcdrAddress_Init return asn1SccAfecHwas_mInstanceLcdrAddress;
function asn1SccAfecHwas_Init return asn1SccAfecHwas;

ERR_AFECHWAS:constant Integer := 81; 
ERR_AFECHWAS_MINSTANCEADDRESS:constant Integer := 36; 
ERR_AFECHWAS_MINSTANCEMRADDRESS:constant Integer := 41; 
ERR_AFECHWAS_MINSTANCEEMRADDRESS:constant Integer := 46; 
ERR_AFECHWAS_MINSTANCECHDRADDRESS:constant Integer := 51; 
ERR_AFECHWAS_MINSTANCECHERADDRESS:constant Integer := 56; 
ERR_AFECHWAS_MINSTANCECHSRADDRESS:constant Integer := 61; 
ERR_AFECHWAS_MINSTANCECRADDRESS:constant Integer := 66; 
ERR_AFECHWAS_MINSTANCEISRADDRESS:constant Integer := 71; 
ERR_AFECHWAS_MINSTANCELCDRADDRESS:constant Integer := 76; 
function asn1SccAfecHwas_IsConstraintValid(val : asn1SccAfecHwas) return adaasn1rtl.ASN1_RESULT;
subtype asn1SccSourceAddress is adaasn1rtl.Asn1UInt range 0 .. 4294967295;


function asn1SccSourceAddress_Equal(val1, val2 : asn1SccSourceAddress) return Boolean;

function asn1SccSourceAddress_Init return asn1SccSourceAddress;

ERR_SOURCEADDRESS:constant Integer := 6; 
function asn1SccSourceAddress_IsConstraintValid(val : asn1SccSourceAddress) return adaasn1rtl.ASN1_RESULT;
subtype asn1SccWord is adaasn1rtl.Asn1UInt range 0 .. 4294967295;


function asn1SccWord_Equal(val1, val2 : asn1SccWord) return Boolean;

function asn1SccWord_Init return asn1SccWord;

ERR_WORD:constant Integer := 11; 
function asn1SccWord_IsConstraintValid(val : asn1SccWord) return adaasn1rtl.ASN1_RESULT;
subtype asn1SccWordMask is adaasn1rtl.Asn1UInt range 0 .. 4294967295;


function asn1SccWordMask_Equal(val1, val2 : asn1SccWordMask) return Boolean;

function asn1SccWordMask_Init return asn1SccWordMask;

ERR_WORDMASK:constant Integer := 16; 
function asn1SccWordMask_IsConstraintValid(val : asn1SccWordMask) return adaasn1rtl.ASN1_RESULT;
-- asn1SccPmcHwas --------------------------------------------
subtype asn1SccPmcHwas_pMC_PCER0_OFFSET is asn1SccDestinationAddress range 0 .. 4294967295;

subtype asn1SccPmcHwas_pMC_PCER1_OFFSET is asn1SccDestinationAddress range 0 .. 4294967295;

subtype asn1SccPmcHwas_pMC_PCxR0_PID29_AFEC0_MASK is asn1SccWordMask range 0 .. 4294967295;

subtype asn1SccPmcHwas_pMC_PCxR1_PID40_AFEC1_MASK is asn1SccWordMask range 0 .. 4294967295;


type asn1SccPmcHwas is record 
    pMC_PCER0_OFFSET : asn1SccPmcHwas_pMC_PCER0_OFFSET;
    pMC_PCER1_OFFSET : asn1SccPmcHwas_pMC_PCER1_OFFSET;
    pMC_PCxR0_PID29_AFEC0_MASK : asn1SccPmcHwas_pMC_PCxR0_PID29_AFEC0_MASK;
    pMC_PCxR1_PID40_AFEC1_MASK : asn1SccPmcHwas_pMC_PCxR1_PID40_AFEC1_MASK;
end record;


function asn1SccPmcHwas_pMC_PCER0_OFFSET_Equal(val1, val2 : asn1SccPmcHwas_pMC_PCER0_OFFSET) return Boolean;

function asn1SccPmcHwas_pMC_PCER1_OFFSET_Equal(val1, val2 : asn1SccPmcHwas_pMC_PCER1_OFFSET) return Boolean;

function asn1SccPmcHwas_pMC_PCxR0_PID29_AFEC0_MASK_Equal(val1, val2 : asn1SccPmcHwas_pMC_PCxR0_PID29_AFEC0_MASK) return Boolean;

function asn1SccPmcHwas_pMC_PCxR1_PID40_AFEC1_MASK_Equal(val1, val2 : asn1SccPmcHwas_pMC_PCxR1_PID40_AFEC1_MASK) return Boolean;

function asn1SccPmcHwas_Equal(val1, val2 : asn1SccPmcHwas) return Boolean;

function asn1SccPmcHwas_pMC_PCER0_OFFSET_Init return asn1SccPmcHwas_pMC_PCER0_OFFSET;
function asn1SccPmcHwas_pMC_PCER1_OFFSET_Init return asn1SccPmcHwas_pMC_PCER1_OFFSET;
function asn1SccPmcHwas_pMC_PCxR0_PID29_AFEC0_MASK_Init return asn1SccPmcHwas_pMC_PCxR0_PID29_AFEC0_MASK;
function asn1SccPmcHwas_pMC_PCxR1_PID40_AFEC1_MASK_Init return asn1SccPmcHwas_pMC_PCxR1_PID40_AFEC1_MASK;
function asn1SccPmcHwas_Init return asn1SccPmcHwas;

ERR_PMCHWAS:constant Integer := 131; 
ERR_PMCHWAS_PMC_PCER0_OFFSET:constant Integer := 111; 
ERR_PMCHWAS_PMC_PCER1_OFFSET:constant Integer := 116; 
ERR_PMCHWAS_PMC_PCXR0_PID29_AFEC0_MASK:constant Integer := 121; 
ERR_PMCHWAS_PMC_PCXR1_PID40_AFEC1_MASK:constant Integer := 126; 
function asn1SccPmcHwas_IsConstraintValid(val : asn1SccPmcHwas) return adaasn1rtl.ASN1_RESULT;
subtype asn1SccAfecHwas_Instance_index_range is Integer range 0..1;
type asn1SccAfecHwas_Instance is (asn1SccafecHwas_Instance_Afec0, asn1SccafecHwas_Instance_Afec1) with Size => adaasn1rtl.Enumerated_Size;
for asn1SccAfecHwas_Instance use
    (asn1SccafecHwas_Instance_Afec0 => 0, asn1SccafecHwas_Instance_Afec1 => 1);

function asn1SccAfecHwas_Instance_Equal(val1, val2 : asn1SccAfecHwas_Instance) return Boolean;

function asn1SccAfecHwas_Instance_Init return asn1SccAfecHwas_Instance;

ERR_AFECHWAS_INSTANCE:constant Integer := 21; 
function asn1SccAfecHwas_Instance_IsConstraintValid(val : asn1SccAfecHwas_Instance) return adaasn1rtl.ASN1_RESULT;
subtype asn1SccAfecHwas_StartupTime is adaasn1rtl.Asn1UInt range 0 .. 15;


function asn1SccAfecHwas_StartupTime_Equal(val1, val2 : asn1SccAfecHwas_StartupTime) return Boolean;

function asn1SccAfecHwas_StartupTime_Init return asn1SccAfecHwas_StartupTime;

ERR_AFECHWAS_STARTUPTIME:constant Integer := 26; 
function asn1SccAfecHwas_StartupTime_IsConstraintValid(val : asn1SccAfecHwas_StartupTime) return adaasn1rtl.ASN1_RESULT;
-- asn1SccAfecHwasConfig --------------------------------------------
subtype asn1SccAfecHwasConfig_mStartupTime is asn1SccAfecHwas_StartupTime range 0 .. 15;

subtype asn1SccAfecHwasConfig_mPrescalerValue is asn1SccWord range 0 .. 4294967295;


type asn1SccAfecHwasConfig is record 
    mAfecInstance : asn1SccAfecHwas_Instance;
    mStartupTime : asn1SccAfecHwasConfig_mStartupTime;
    mPrescalerValue : asn1SccAfecHwasConfig_mPrescalerValue;
end record;


function asn1SccAfecHwasConfig_mStartupTime_Equal(val1, val2 : asn1SccAfecHwasConfig_mStartupTime) return Boolean;

function asn1SccAfecHwasConfig_mPrescalerValue_Equal(val1, val2 : asn1SccAfecHwasConfig_mPrescalerValue) return Boolean;

function asn1SccAfecHwasConfig_Equal(val1, val2 : asn1SccAfecHwasConfig) return Boolean;

function asn1SccAfecHwasConfig_mStartupTime_Init return asn1SccAfecHwasConfig_mStartupTime;
function asn1SccAfecHwasConfig_mPrescalerValue_Init return asn1SccAfecHwasConfig_mPrescalerValue;
function asn1SccAfecHwasConfig_Init return asn1SccAfecHwasConfig;

ERR_AFECHWASCONFIG:constant Integer := 106; 
ERR_AFECHWASCONFIG_MAFECINSTANCE_2:constant Integer := 91; 
ERR_AFECHWASCONFIG_MSTARTUPTIME:constant Integer := 96; 
ERR_AFECHWASCONFIG_MPRESCALERVALUE:constant Integer := 101; 
function asn1SccAfecHwasConfig_IsConstraintValid(val : asn1SccAfecHwasConfig) return adaasn1rtl.ASN1_RESULT;
subtype asn1SccAfecHwasChannel is adaasn1rtl.Asn1UInt range 0 .. 15;


function asn1SccAfecHwasChannel_Equal(val1, val2 : asn1SccAfecHwasChannel) return Boolean;

function asn1SccAfecHwasChannel_Init return asn1SccAfecHwasChannel;

ERR_AFECHWASCHANNEL:constant Integer := 31; 
function asn1SccAfecHwasChannel_IsConstraintValid(val : asn1SccAfecHwasChannel) return adaasn1rtl.ASN1_RESULT;
pragma Warnings (Off, "there are no others");
 
pragma Warnings (On, "there are no others");
private
   --# hide COM_N7SPACE_AFECHWAS;


end COM_N7SPACE_AFECHWAS;