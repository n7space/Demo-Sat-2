--------------------------------------------------------
--! File generated by asn2aadl v2.2-r4e665b8: DO NOT EDIT !
--------------------------------------------------------
--! MadeInFastMode:True:
--! InputASN1FileChecksum:7cf30bedfa9ed8a851926f84e6bfa94e:COM-N7SPACE-AFECHWAS.acn:
--! InputASN1FileChecksum:d8da95b7f544fe1e22a9cba6852a0761:COM-N7SPACE-AFECHWAS.asn:
--! InputASN1FileChecksum:0453873d19dc5eb96813f639aaaa93bd:COM-N7SPACE-HWAS.acn:
--! InputASN1FileChecksum:2d170e6c33a1edfed37fb7f3f5b1cd54:COM-N7SPACE-HWAS.asn:
--! InputASN1FileChecksum:9755d7b4b9ac30542f39afa56beced30:samv71Afec.acn:
--! InputASN1FileChecksum:9b5c8b4ade5f54104097f779a0d0eb64:samv71Afec.asn:
--! InputASN1FileChecksum:ff35cd78b1e82f09b63b209ab7cf7c34:/home/taste/tool-inst/share/taste-types/taste-types.asn:
--------------------------------------------------------

package DataView

public

  with Data_Model;
  with Taste;
  with Base_Types;
  with Deployment;
DATA Simulink_Tunable_Parameter
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE_Directives";
   Type_Source_Name => "Simulink-Tunable-Parameter";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
   TASTE::Forbid_in_PI => true;
END Simulink_Tunable_Parameter;
DATA Timer
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE_Directives";
   Type_Source_Name => "Timer";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
   TASTE::Forbid_in_PI => true;
END Timer;
DATA Taste_directive
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE_Directives";
   Type_Source_Name => "Taste-directive";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
   TASTE::Forbid_in_PI => true;
END Taste_directive;

data Stream_Element_Buffer
    -- Root type for buffer elements
properties
    Data_Model::Data_Representation => Character;
end Stream_Element_Buffer;
DATA AfecHwas
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("COM-N7SPACE-AFECHWAS.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_COM_N7SPACE_AFECHWAS);
    TASTE::Ada_Package_Name => "COM_N7SPACE_AFECHWAS";
    Deployment::ASN1_Module_Name => "COM-N7SPACE-AFECHWAS";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "AfecHwas";
    TASTE::Position_In_File => [ line => 13 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END AfecHwas;

DATA IMPLEMENTATION AfecHwas.impl
END AfecHwas.impl;

DATA AfecHwas_Buffer_Max
END AfecHwas_Buffer_Max;

DATA IMPLEMENTATION AfecHwas_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type AfecHwas
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END AfecHwas_Buffer_Max.impl;

DATA AfecHwas_Buffer
END AfecHwas_Buffer;

DATA IMPLEMENTATION AfecHwas_Buffer.impl
    -- Buffer to hold a marshalled data of type AfecHwas
SUBCOMPONENTS
    Buffer : data AfecHwas_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END AfecHwas_Buffer.impl;

DATA AfecHwas_Instance
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("COM-N7SPACE-AFECHWAS.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_COM_N7SPACE_AFECHWAS);
    TASTE::Ada_Package_Name => "COM_N7SPACE_AFECHWAS";
    Deployment::ASN1_Module_Name => "COM-N7SPACE-AFECHWAS";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "AfecHwas-Instance";
    TASTE::Position_In_File => [ line => 6 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END AfecHwas_Instance;

DATA IMPLEMENTATION AfecHwas_Instance.impl
END AfecHwas_Instance.impl;

DATA AfecHwas_Instance_Buffer_Max
END AfecHwas_Instance_Buffer_Max;

DATA IMPLEMENTATION AfecHwas_Instance_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type AfecHwas_Instance
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END AfecHwas_Instance_Buffer_Max.impl;

DATA AfecHwas_Instance_Buffer
END AfecHwas_Instance_Buffer;

DATA IMPLEMENTATION AfecHwas_Instance_Buffer.impl
    -- Buffer to hold a marshalled data of type AfecHwas_Instance
SUBCOMPONENTS
    Buffer : data AfecHwas_Instance_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END AfecHwas_Instance_Buffer.impl;

DATA AfecHwas_StartupTime
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("COM-N7SPACE-AFECHWAS.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_COM_N7SPACE_AFECHWAS);
    TASTE::Ada_Package_Name => "COM_N7SPACE_AFECHWAS";
    Deployment::ASN1_Module_Name => "COM-N7SPACE-AFECHWAS";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "AfecHwas-StartupTime";
    TASTE::Position_In_File => [ line => 11 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END AfecHwas_StartupTime;

DATA IMPLEMENTATION AfecHwas_StartupTime.impl
END AfecHwas_StartupTime.impl;

DATA AfecHwas_StartupTime_Buffer_Max
END AfecHwas_StartupTime_Buffer_Max;

DATA IMPLEMENTATION AfecHwas_StartupTime_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type AfecHwas_StartupTime
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END AfecHwas_StartupTime_Buffer_Max.impl;

DATA AfecHwas_StartupTime_Buffer
END AfecHwas_StartupTime_Buffer;

DATA IMPLEMENTATION AfecHwas_StartupTime_Buffer.impl
    -- Buffer to hold a marshalled data of type AfecHwas_StartupTime
SUBCOMPONENTS
    Buffer : data AfecHwas_StartupTime_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END AfecHwas_StartupTime_Buffer.impl;

DATA AfecHwasChannel
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("COM-N7SPACE-AFECHWAS.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_COM_N7SPACE_AFECHWAS);
    TASTE::Ada_Package_Name => "COM_N7SPACE_AFECHWAS";
    Deployment::ASN1_Module_Name => "COM-N7SPACE-AFECHWAS";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "AfecHwasChannel";
    TASTE::Position_In_File => [ line => 12 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END AfecHwasChannel;

DATA IMPLEMENTATION AfecHwasChannel.impl
END AfecHwasChannel.impl;

DATA AfecHwasChannel_Buffer_Max
END AfecHwasChannel_Buffer_Max;

DATA IMPLEMENTATION AfecHwasChannel_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type AfecHwasChannel
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END AfecHwasChannel_Buffer_Max.impl;

DATA AfecHwasChannel_Buffer
END AfecHwasChannel_Buffer;

DATA IMPLEMENTATION AfecHwasChannel_Buffer.impl
    -- Buffer to hold a marshalled data of type AfecHwasChannel
SUBCOMPONENTS
    Buffer : data AfecHwasChannel_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END AfecHwasChannel_Buffer.impl;

DATA AfecHwasConfig
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("COM-N7SPACE-AFECHWAS.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_COM_N7SPACE_AFECHWAS);
    TASTE::Ada_Package_Name => "COM_N7SPACE_AFECHWAS";
    Deployment::ASN1_Module_Name => "COM-N7SPACE-AFECHWAS";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "AfecHwasConfig";
    TASTE::Position_In_File => [ line => 25 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END AfecHwasConfig;

DATA IMPLEMENTATION AfecHwasConfig.impl
END AfecHwasConfig.impl;

DATA AfecHwasConfig_Buffer_Max
END AfecHwasConfig_Buffer_Max;

DATA IMPLEMENTATION AfecHwasConfig_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type AfecHwasConfig
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END AfecHwasConfig_Buffer_Max.impl;

DATA AfecHwasConfig_Buffer
END AfecHwasConfig_Buffer;

DATA IMPLEMENTATION AfecHwasConfig_Buffer.impl
    -- Buffer to hold a marshalled data of type AfecHwasConfig
SUBCOMPONENTS
    Buffer : data AfecHwasConfig_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END AfecHwasConfig_Buffer.impl;

DATA Byte
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("COM-N7SPACE-HWAS.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_COM_N7SPACE_HWAS);
    TASTE::Ada_Package_Name => "COM_N7SPACE_HWAS";
    Deployment::ASN1_Module_Name => "COM-N7SPACE-HWAS";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Byte";
    TASTE::Position_In_File => [ line => 3 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END Byte;

DATA IMPLEMENTATION Byte.impl
END Byte.impl;

DATA Byte_Buffer_Max
END Byte_Buffer_Max;

DATA IMPLEMENTATION Byte_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Byte
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Byte_Buffer_Max.impl;

DATA Byte_Buffer
END Byte_Buffer;

DATA IMPLEMENTATION Byte_Buffer.impl
    -- Buffer to hold a marshalled data of type Byte
SUBCOMPONENTS
    Buffer : data Byte_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Byte_Buffer.impl;

DATA ByteBuffer
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("COM-N7SPACE-HWAS.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_COM_N7SPACE_HWAS);
    TASTE::Ada_Package_Name => "COM_N7SPACE_HWAS";
    Deployment::ASN1_Module_Name => "COM-N7SPACE-HWAS";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "ByteBuffer";
    TASTE::Position_In_File => [ line => 4 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END ByteBuffer;

DATA IMPLEMENTATION ByteBuffer.impl
END ByteBuffer.impl;

DATA ByteBuffer_Buffer_Max
END ByteBuffer_Buffer_Max;

DATA IMPLEMENTATION ByteBuffer_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type ByteBuffer
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END ByteBuffer_Buffer_Max.impl;

DATA ByteBuffer_Buffer
END ByteBuffer_Buffer;

DATA IMPLEMENTATION ByteBuffer_Buffer.impl
    -- Buffer to hold a marshalled data of type ByteBuffer
SUBCOMPONENTS
    Buffer : data ByteBuffer_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END ByteBuffer_Buffer.impl;

DATA DestinationAddress
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("COM-N7SPACE-AFECHWAS.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_COM_N7SPACE_AFECHWAS);
    TASTE::Ada_Package_Name => "COM_N7SPACE_AFECHWAS";
    Deployment::ASN1_Module_Name => "COM-N7SPACE-AFECHWAS";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "DestinationAddress";
    TASTE::Position_In_File => [ line => 2 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END DestinationAddress;

DATA IMPLEMENTATION DestinationAddress.impl
END DestinationAddress.impl;

DATA DestinationAddress_Buffer_Max
END DestinationAddress_Buffer_Max;

DATA IMPLEMENTATION DestinationAddress_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type DestinationAddress
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END DestinationAddress_Buffer_Max.impl;

DATA DestinationAddress_Buffer
END DestinationAddress_Buffer;

DATA IMPLEMENTATION DestinationAddress_Buffer.impl
    -- Buffer to hold a marshalled data of type DestinationAddress
SUBCOMPONENTS
    Buffer : data DestinationAddress_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END DestinationAddress_Buffer.impl;

DATA Interrupt_Type
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("COM-N7SPACE-HWAS.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_COM_N7SPACE_HWAS);
    TASTE::Ada_Package_Name => "COM_N7SPACE_HWAS";
    Deployment::ASN1_Module_Name => "COM-N7SPACE-HWAS";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Interrupt-Type";
    TASTE::Position_In_File => [ line => 5 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END Interrupt_Type;

DATA IMPLEMENTATION Interrupt_Type.impl
END Interrupt_Type.impl;

DATA Interrupt_Type_Buffer_Max
END Interrupt_Type_Buffer_Max;

DATA IMPLEMENTATION Interrupt_Type_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Interrupt_Type
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Interrupt_Type_Buffer_Max.impl;

DATA Interrupt_Type_Buffer
END Interrupt_Type_Buffer;

DATA IMPLEMENTATION Interrupt_Type_Buffer.impl
    -- Buffer to hold a marshalled data of type Interrupt_Type
SUBCOMPONENTS
    Buffer : data Interrupt_Type_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Interrupt_Type_Buffer.impl;

DATA InterruptNumber
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("COM-N7SPACE-HWAS.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_COM_N7SPACE_HWAS);
    TASTE::Ada_Package_Name => "COM_N7SPACE_HWAS";
    Deployment::ASN1_Module_Name => "COM-N7SPACE-HWAS";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "InterruptNumber";
    TASTE::Position_In_File => [ line => 2 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END InterruptNumber;

DATA IMPLEMENTATION InterruptNumber.impl
END InterruptNumber.impl;

DATA InterruptNumber_Buffer_Max
END InterruptNumber_Buffer_Max;

DATA IMPLEMENTATION InterruptNumber_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type InterruptNumber
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END InterruptNumber_Buffer_Max.impl;

DATA InterruptNumber_Buffer
END InterruptNumber_Buffer;

DATA IMPLEMENTATION InterruptNumber_Buffer.impl
    -- Buffer to hold a marshalled data of type InterruptNumber
SUBCOMPONENTS
    Buffer : data InterruptNumber_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END InterruptNumber_Buffer.impl;

DATA MyInteger
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("samv71Afec.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_SAMV71AFEC_DATAVIEW);
    TASTE::Ada_Package_Name => "SAMV71AFEC_DATAVIEW";
    Deployment::ASN1_Module_Name => "SAMV71AFEC-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MyInteger";
    TASTE::Position_In_File => [ line => 4 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END MyInteger;

DATA IMPLEMENTATION MyInteger.impl
END MyInteger.impl;

DATA MyInteger_Buffer_Max
END MyInteger_Buffer_Max;

DATA IMPLEMENTATION MyInteger_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MyInteger
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END MyInteger_Buffer_Max.impl;

DATA MyInteger_Buffer
END MyInteger_Buffer;

DATA IMPLEMENTATION MyInteger_Buffer.impl
    -- Buffer to hold a marshalled data of type MyInteger
SUBCOMPONENTS
    Buffer : data MyInteger_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MyInteger_Buffer.impl;

DATA PmcHwas
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("COM-N7SPACE-AFECHWAS.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_COM_N7SPACE_AFECHWAS);
    TASTE::Ada_Package_Name => "COM_N7SPACE_AFECHWAS";
    Deployment::ASN1_Module_Name => "COM-N7SPACE-AFECHWAS";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "PmcHwas";
    TASTE::Position_In_File => [ line => 31 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END PmcHwas;

DATA IMPLEMENTATION PmcHwas.impl
END PmcHwas.impl;

DATA PmcHwas_Buffer_Max
END PmcHwas_Buffer_Max;

DATA IMPLEMENTATION PmcHwas_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type PmcHwas
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END PmcHwas_Buffer_Max.impl;

DATA PmcHwas_Buffer
END PmcHwas_Buffer;

DATA IMPLEMENTATION PmcHwas_Buffer.impl
    -- Buffer to hold a marshalled data of type PmcHwas
SUBCOMPONENTS
    Buffer : data PmcHwas_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END PmcHwas_Buffer.impl;

DATA SourceAddress
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("COM-N7SPACE-AFECHWAS.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_COM_N7SPACE_AFECHWAS);
    TASTE::Ada_Package_Name => "COM_N7SPACE_AFECHWAS";
    Deployment::ASN1_Module_Name => "COM-N7SPACE-AFECHWAS";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "SourceAddress";
    TASTE::Position_In_File => [ line => 3 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END SourceAddress;

DATA IMPLEMENTATION SourceAddress.impl
END SourceAddress.impl;

DATA SourceAddress_Buffer_Max
END SourceAddress_Buffer_Max;

DATA IMPLEMENTATION SourceAddress_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type SourceAddress
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END SourceAddress_Buffer_Max.impl;

DATA SourceAddress_Buffer
END SourceAddress_Buffer;

DATA IMPLEMENTATION SourceAddress_Buffer.impl
    -- Buffer to hold a marshalled data of type SourceAddress
SUBCOMPONENTS
    Buffer : data SourceAddress_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END SourceAddress_Buffer.impl;

DATA T_Boolean
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Boolean";
    TASTE::Position_In_File => [ line => 14 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aBOOLEAN;
END T_Boolean;

DATA IMPLEMENTATION T_Boolean.impl
END T_Boolean.impl;

DATA T_Boolean_Buffer_Max
END T_Boolean_Buffer_Max;

DATA IMPLEMENTATION T_Boolean_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Boolean
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Boolean_Buffer_Max.impl;

DATA T_Boolean_Buffer
END T_Boolean_Buffer;

DATA IMPLEMENTATION T_Boolean_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Boolean
SUBCOMPONENTS
    Buffer : data T_Boolean_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Boolean_Buffer.impl;

DATA T_Int32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int32";
    TASTE::Position_In_File => [ line => 6 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_Int32;

DATA IMPLEMENTATION T_Int32.impl
END T_Int32.impl;

DATA T_Int32_Buffer_Max
END T_Int32_Buffer_Max;

DATA IMPLEMENTATION T_Int32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Int32_Buffer_Max.impl;

DATA T_Int32_Buffer
END T_Int32_Buffer;

DATA IMPLEMENTATION T_Int32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int32
SUBCOMPONENTS
    Buffer : data T_Int32_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Int32_Buffer.impl;

DATA T_Int8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int8";
    TASTE::Position_In_File => [ line => 10 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_Int8;

DATA IMPLEMENTATION T_Int8.impl
END T_Int8.impl;

DATA T_Int8_Buffer_Max
END T_Int8_Buffer_Max;

DATA IMPLEMENTATION T_Int8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Int8_Buffer_Max.impl;

DATA T_Int8_Buffer
END T_Int8_Buffer;

DATA IMPLEMENTATION T_Int8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int8
SUBCOMPONENTS
    Buffer : data T_Int8_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Int8_Buffer.impl;

DATA T_Null_Record
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Null-Record";
    TASTE::Position_In_File => [ line => 16 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END T_Null_Record;

DATA IMPLEMENTATION T_Null_Record.impl
END T_Null_Record.impl;

DATA T_Null_Record_Buffer_Max
END T_Null_Record_Buffer_Max;

DATA IMPLEMENTATION T_Null_Record_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Null_Record
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Null_Record_Buffer_Max.impl;

DATA T_Null_Record_Buffer
END T_Null_Record_Buffer;

DATA IMPLEMENTATION T_Null_Record_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Null_Record
SUBCOMPONENTS
    Buffer : data T_Null_Record_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Null_Record_Buffer.impl;

DATA T_UInt32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt32";
    TASTE::Position_In_File => [ line => 8 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_UInt32;

DATA IMPLEMENTATION T_UInt32.impl
END T_UInt32.impl;

DATA T_UInt32_Buffer_Max
END T_UInt32_Buffer_Max;

DATA IMPLEMENTATION T_UInt32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UInt32_Buffer_Max.impl;

DATA T_UInt32_Buffer
END T_UInt32_Buffer;

DATA IMPLEMENTATION T_UInt32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt32
SUBCOMPONENTS
    Buffer : data T_UInt32_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInt32_Buffer.impl;

DATA T_UInt8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt8";
    TASTE::Position_In_File => [ line => 12 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_UInt8;

DATA IMPLEMENTATION T_UInt8.impl
END T_UInt8.impl;

DATA T_UInt8_Buffer_Max
END T_UInt8_Buffer_Max;

DATA IMPLEMENTATION T_UInt8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UInt8_Buffer_Max.impl;

DATA T_UInt8_Buffer
END T_UInt8_Buffer;

DATA IMPLEMENTATION T_UInt8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt8
SUBCOMPONENTS
    Buffer : data T_UInt8_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInt8_Buffer.impl;

DATA Word
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("COM-N7SPACE-AFECHWAS.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_COM_N7SPACE_AFECHWAS);
    TASTE::Ada_Package_Name => "COM_N7SPACE_AFECHWAS";
    Deployment::ASN1_Module_Name => "COM-N7SPACE-AFECHWAS";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Word";
    TASTE::Position_In_File => [ line => 4 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END Word;

DATA IMPLEMENTATION Word.impl
END Word.impl;

DATA Word_Buffer_Max
END Word_Buffer_Max;

DATA IMPLEMENTATION Word_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Word
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Word_Buffer_Max.impl;

DATA Word_Buffer
END Word_Buffer;

DATA IMPLEMENTATION Word_Buffer.impl
    -- Buffer to hold a marshalled data of type Word
SUBCOMPONENTS
    Buffer : data Word_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Word_Buffer.impl;

DATA WordMask
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("COM-N7SPACE-AFECHWAS.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_COM_N7SPACE_AFECHWAS);
    TASTE::Ada_Package_Name => "COM_N7SPACE_AFECHWAS";
    Deployment::ASN1_Module_Name => "COM-N7SPACE-AFECHWAS";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "WordMask";
    TASTE::Position_In_File => [ line => 5 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END WordMask;

DATA IMPLEMENTATION WordMask.impl
END WordMask.impl;

DATA WordMask_Buffer_Max
END WordMask_Buffer_Max;

DATA IMPLEMENTATION WordMask_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type WordMask
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END WordMask_Buffer_Max.impl;

DATA WordMask_Buffer
END WordMask_Buffer;

DATA IMPLEMENTATION WordMask_Buffer.impl
    -- Buffer to hold a marshalled data of type WordMask
SUBCOMPONENTS
    Buffer : data WordMask_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END WordMask_Buffer.impl;

SYSTEM Taste_DataView
END    Taste_DataView;

SYSTEM IMPLEMENTATION Taste_DataView.others
SUBCOMPONENTS
   AfecHwas : DATA AfecHwas.impl;
   AfecHwas_Instance : DATA AfecHwas_Instance.impl;
   AfecHwas_StartupTime : DATA AfecHwas_StartupTime.impl;
   AfecHwasChannel : DATA AfecHwasChannel.impl;
   AfecHwasConfig : DATA AfecHwasConfig.impl;
   Byte : DATA Byte.impl;
   ByteBuffer : DATA ByteBuffer.impl;
   DestinationAddress : DATA DestinationAddress.impl;
   Interrupt_Type : DATA Interrupt_Type.impl;
   InterruptNumber : DATA InterruptNumber.impl;
   MyInteger : DATA MyInteger.impl;
   PmcHwas : DATA PmcHwas.impl;
   SourceAddress : DATA SourceAddress.impl;
   T_Boolean : DATA T_Boolean.impl;
   T_Int32 : DATA T_Int32.impl;
   T_Int8 : DATA T_Int8.impl;
   T_Null_Record : DATA T_Null_Record.impl;
   T_UInt32 : DATA T_UInt32.impl;
   T_UInt8 : DATA T_UInt8.impl;
   Word : DATA Word.impl;
   WordMask : DATA WordMask.impl;
END Taste_DataView.others;
DATA ACN_COM_N7SPACE_AFECHWAS
PROPERTIES
    Source_Text => ("COM-N7SPACE-AFECHWAS.acn");
    Source_Language => (ACN);
END ACN_COM_N7SPACE_AFECHWAS;

DATA ACN_COM_N7SPACE_HWAS
PROPERTIES
    Source_Text => ("COM-N7SPACE-HWAS.acn");
    Source_Language => (ACN);
END ACN_COM_N7SPACE_HWAS;

DATA ACN_SAMV71AFEC_DATAVIEW
PROPERTIES
    Source_Text => ("samv71Afec.acn");
    Source_Language => (ACN);
END ACN_SAMV71AFEC_DATAVIEW;

end DataView;
